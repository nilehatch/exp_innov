getwd()
#| label: fig-tyranny-market
#| echo: false
#| warning: false
#| fig-align: right
#| fig-cap-location: margin
#| fig-cap: In many markets, competitors converge on the largest customer segment, leaving fringe needs unmet. These edges are where expeditionary innovation takes root.
#| fig-width: 10
#| fig-height: 3.6
#| out-width: 100%
#| fig-asp: 0.35    # ~wide banner; adjust 0.30â€“0.40 to taste
library(tidyverse)
# --- Parameters -------------------------------------------------------------
mu    <- 3
sigma <- 1
x_min <- 0.5
x_max <- 5.5
edge_k <- 0.75           # width of "center" band (in SDs)
c_lo <- mu - edge_k*sigma
c_hi <- mu + edge_k*sigma
# --- Data -------------------------------------------------------------------
x <- seq(x_min, x_max, length.out = 600)
df <- tibble(
x = x,
y = dnorm(x, mean = mu, sd = sigma)
)
df_all    <- df
df_center <- df %>% filter(x >= c_lo, x <= c_hi)
df_left   <- df %>% filter(x <  c_lo)
df_right  <- df %>% filter(x >  c_hi)
inc_label <- "Incumbents cluster around\n mainstream customers"
ggplot(df, aes(x, y)) +
# Areas
geom_area(data = df_all,    fill = "grey85") +
geom_area(data = df_left,   fill = "#3774B7", alpha = 1) +
geom_area(data = df_right,  fill = "#3774B7", alpha = 1) +
geom_area(data = df_center, fill = "grey75") +
# Curve + baseline
# geom_line(color = "royalblue3", linewidth = 1.6) +
geom_hline(yintercept = 0, color = "black", linewidth = 1) +
# Annotations
annotate("text",
x = mu, y = max(df$y) * 0.6,
label = inc_label, size = 4.5, lineheight = 1.05) +
geom_label(
data = tibble(
x = c(x_min + 1.65, x_max - 1.65),
y = c(max(df$y)*0.15, max(df$y)*0.15),
lab = c("Underserved\nfringe", "Underserved\nfringe"),
h = c(1, 0)
),
aes(x = x, y = y, label = lab, hjust = h),
size = 5,                  # slightly smaller for phones
label.size = 0,              # no stroke border
label.padding = unit(0.15, "lines"),
label.r = unit(0.08, "lines"),
color = "white",
fill = "#3774B7",
alpha = 1
) +
# Labels
xlab("Customer Preferences") + ylab(NULL) +
# Vertical y-axis title just outside the panel
annotate("text",
x = x_min + 0.02 * (x_max - x_min),  # a small nudge inside
y = max(df$y) * 0.55,
label = "Number of Customers",
angle = 90, fontface = "bold", size = 5) +
scale_x_continuous(limits = c(x_min, x_max), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, max(df$y) * 1.05), expand = c(0, 0)) +
# Theme: minimal, no grid, tight margins for vertical label
theme_minimal(base_size = 11) +
theme(
axis.title = element_text(size = 14, face = "bold"),
axis.ticks  = element_blank(),
axis.text   = element_blank(),
panel.grid  = element_blank(),
plot.margin = margin(5, 10, 10, 5)  # give the vertical label some room
)
# Save ggplot as PNG
ggsave("tyranny_market.png", plot = my_plot, width = 8, height = 6, dpi = 300)
my_plot <- ggplot(df, aes(x, y)) +
# Areas
geom_area(data = df_all,    fill = "grey85") +
geom_area(data = df_left,   fill = "#3774B7", alpha = 1) +
geom_area(data = df_right,  fill = "#3774B7", alpha = 1) +
geom_area(data = df_center, fill = "grey75") +
# Curve + baseline
# geom_line(color = "royalblue3", linewidth = 1.6) +
geom_hline(yintercept = 0, color = "black", linewidth = 1) +
# Annotations
annotate("text",
x = mu, y = max(df$y) * 0.6,
label = inc_label, size = 4.5, lineheight = 1.05) +
geom_label(
data = tibble(
x = c(x_min + 1.65, x_max - 1.65),
y = c(max(df$y)*0.15, max(df$y)*0.15),
lab = c("Underserved\nfringe", "Underserved\nfringe"),
h = c(1, 0)
),
aes(x = x, y = y, label = lab, hjust = h),
size = 5,                  # slightly smaller for phones
label.size = 0,              # no stroke border
label.padding = unit(0.15, "lines"),
label.r = unit(0.08, "lines"),
color = "white",
fill = "#3774B7",
alpha = 1
) +
# Labels
xlab("Customer Preferences") + ylab(NULL) +
# Vertical y-axis title just outside the panel
annotate("text",
x = x_min + 0.02 * (x_max - x_min),  # a small nudge inside
y = max(df$y) * 0.55,
label = "Number of Customers",
angle = 90, fontface = "bold", size = 5) +
scale_x_continuous(limits = c(x_min, x_max), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, max(df$y) * 1.05), expand = c(0, 0)) +
# Theme: minimal, no grid, tight margins for vertical label
theme_minimal(base_size = 11) +
theme(
axis.title = element_text(size = 14, face = "bold"),
axis.ticks  = element_blank(),
axis.text   = element_blank(),
panel.grid  = element_blank(),
plot.margin = margin(5, 10, 10, 5)  # give the vertical label some room
)
# Save ggplot as PNG
ggsave("tyranny_market.png", plot = my_plot, width = 8, height = 6, dpi = 300)
# Save ggplot as SVG
ggsave("tyranny_market.svg", plot = my_plot, width = 8, height = 6, dpi = 300)
install.packages("svglite")
install.packages("svgtools")
# Save ggplot as SVG
ggsave("tyranny_market.svg", plot = my_plot, width = 8, height = 6, dpi = 300)
---
''
source("~/Dropbox/Research/CA Good/Simulation/Hotelling base.R")
